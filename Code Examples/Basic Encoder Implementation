// Rotary Encoder Inputs
#define CLK 2   // these are specific pin connections. CLK on the encoder goes to pin 2, for example. 
#define DT 3
#define SW 4

int counter = 0;
int currentStateCLK;
int lastStateCLK;
String currentDir ="";
int buttonState;                      // the current reading from the input pin
int lastButtonState = LOW;            // the previous reading from the input pin
unsigned long lastDebounceTime = 0;  // the last time the output pin was toggled
unsigned long debounceDelay = 50;    // the debounce time; increase if the output flickers

void setup() {

  pinMode(CLK,INPUT);                // Set encoder pins as inputs
  pinMode(DT,INPUT);
  pinMode(SW, INPUT_PULLUP);
  Serial.begin(9600);                // Setup Serial Monitor
  
  lastStateCLK = digitalRead(CLK);   // Read the initial state of CLK
  
  attachInterrupt(0, updateEncoder, CHANGE);   // Call updateEncoder() when any high/low changed seen
  attachInterrupt(1, updateEncoder, CHANGE);   // on interrupt 0 (pin 2), or interrupt 1 (pin 3)
}

void loop() {

  int reading = digitalRead(4);               // read the state of the switch into a local variable:

                                              // check to see if you just pressed the button
                                              // (i.e. the input went from LOW to HIGH), and you've waited long enough
                                              // since the last press to ignore any noise:
                                              // If the switch changed, due to noise or pressing:
  if (reading != lastButtonState) {
    // reset the debouncing timer
    lastDebounceTime = millis();
  }

  if ((millis() - lastDebounceTime) > debounceDelay) {  // whatever the reading is at, it's been there for longer than the debounce
                                                        // delay, so take it as the actual current state:

    if (reading != buttonState) {                       // if the button state has changed:
      buttonState = reading;
      
      if (buttonState == HIGH) {                         // only toggle the LED if the new button state is HIGH
        Serial.println("pressed");
      }
  }
  }

  lastButtonState = reading;                             // save the reading. Next time through the loop, it'll be the lastButtonState:
}

void updateEncoder(){
  currentStateCLK = digitalRead(CLK);                     // Read the current state of CLK


  if (currentStateCLK != lastStateCLK  && currentStateCLK == 1){   // If last and current state of CLK are different, then pulse occurred
                                                                   // React to only 1 state change to avoid double count

   
   
    if (digitalRead(DT) != currentStateCLK) {                        // If the DT state is different than the CLK state then
      counter --;                                                    // the encoder is rotating CCW so decrement
      currentDir ="CCW";
    } else {
      counter ++;                                                     // Encoder is rotating CW so increment
      currentDir ="CW";
    }

    Serial.print("Direction: ");
    Serial.print(currentDir);
    Serial.print(" | Counter: ");
    Serial.println(counter);
  }

  // Remember last CLK state
  lastStateCLK = currentStateCLK;
}
