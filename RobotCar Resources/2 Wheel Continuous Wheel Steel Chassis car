#include <Servo.h>   // bring in that servo library yo!

bool button = false;       //initiatize button state as not pressed
int buttonPin = 13;       // Thank you Will! Connect button to analog 1 header (outside pin), and top-left pin of ISCP header (USB to left) 
int leftMotorPin = 3;     //define a pin for the left motor
int rightMotorPin = 5;    // blah blah right motor 
int leftSensorPin = 6;    //Motor connecter 3
int rightSensorPin  = 9;  // Motor connector 4

Servo leftMotor;          // create a left motor
Servo rightMotor;         // create a right motor

void setup() {
pinMode(6, INPUT);
pinMode(9, INPUT);
pinMode(buttonPin, INPUT_PULLUP);   // treating A0 as an digital pin - # 14
leftMotor.attach(leftMotorPin);     //attach a motor to a pin
rightMotor.attach(rightMotorPin);   //attach a motor to a pin
Serial.begin(9600);       // start serial communications
Serial.println("Serial is working!");

}
void loop(){
//////////////////////////DON'T TOUCH THIS CODE///////////////////
    if (digitalRead(buttonPin) == HIGH){  // if the button is NOT pressed,
         button = true;             // DO THIS STUFF    
         Serial.println("You Pushed My Button"); // DO THIS STUFF INSTEAD
      
    }   
    if(digitalRead(buttonPin) == LOW){ // IF THE BUTTON IS PRESSED
          button = false;
              }
 /////////////////////////DON'T TOUCH THIS CODE   
    while(button == true){      //while button has been pushed
          //Serial.println("inside the while loop");
///////////////////////PUT ROBO INSTRUCTIONS HERE////////////

    if(digitalRead(leftSensorPin) == 0 && digitalRead(rightSensorPin) == 0){
    Serial.println("both triggered");  
    }
    if(digitalRead(leftSensorPin) == 1 && digitalRead(rightSensorPin) == 1){
    Serial.println("no triggers");  
    }
    if(digitalRead(leftSensorPin) == HIGH && digitalRead(rightSensorPin) == LOW){
    Serial.println("left triggered");  
    }
    if(digitalRead(leftSensorPin) == LOW && digitalRead(rightSensorPin) == HIGH){
    Serial.println("right triggered");  
    }
//////////////////////PUT ROBO INSTRUCTIONS HERE//////////////
          //button = false;             //set button to false. COmmented out to keep robot in "on" loop indefinately
         // break;                      // no break, to keep in loop   
         // jump back to main loop
         delay(50); // added to slow down refresh
    }    
}

void driveForward(int duration){
  Serial.println("going forward");
  leftMotor.write(135);
  rightMotor.write(45);
  delay(duration);
  leftMotor.write(90);
  rightMotor.write(90);
}
void driveBackward(int duration){
  Serial.println("going backward");
  leftMotor.write(45);
  rightMotor.write(135);
  delay(duration);
  leftMotor.write(90);
  rightMotor.write(90);
}

void rotateLeft(int duration){
  Serial.println("turning left");
  leftMotor.write(0);
  rightMotor.write(0);
  delay(duration);
  leftMotor.write(90);
  rightMotor.write(90);
}

void rotateRight(int duration){
  Serial.println("turning right");
  leftMotor.write(180);
  rightMotor.write(180);
  delay(duration);
  leftMotor.write(90);
  rightMotor.write(90);
}




  
